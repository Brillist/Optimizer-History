#pragma once

////////////////////////////////////////////////////////////////////////////////////////////////////

#include <clp/IntExpDomainIt.h>

////////////////////////////////////////////////////////////////////////////////////////////////////

CLP_NS_BEGIN;

////////////////////////////////////////////////////////////////////////////////////////////////////

class IntExpDomainCAR;

////////////////////////////////////////////////////////////////////////////////////////////////////

/**
   Iterator for IntExpDomainCAR.

   \ingroup clp
*/

////////////////////////////////////////////////////////////////////////////////////////////////////

class IntExpDomainCARit : public IntExpDomainIt
{
    UTL_CLASS_DECL(IntExpDomainCARit, IntExpDomainIt);
    UTL_CLASS_DEFID;

public:
    /** Constructor. */
    IntExpDomainCARit(const IntExpDomainCAR* domain, uint_t idx, uint_t val)
    {
        _domain = domain;
        _idx = idx;
        _val = val;
    }

    virtual void copy(const utl::Object& rhs);

    /// \name Movement
    //@{
    virtual void next();

    virtual void prev();
    //@}

private:
    const IntExpDomainCAR* _domain;
    uint_t _idx;
};

////////////////////////////////////////////////////////////////////////////////////////////////////

CLP_NS_END;
