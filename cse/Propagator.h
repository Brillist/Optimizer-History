#pragma once

////////////////////////////////////////////////////////////////////////////////////////////////////

#include <clp/BoundPropagator.h>
#include <cse/SchedulingContext.h>

////////////////////////////////////////////////////////////////////////////////////////////////////

CSE_NS_BEGIN;

////////////////////////////////////////////////////////////////////////////////////////////////////

/**
   Propagator.

   \ingroup cse
*/

////////////////////////////////////////////////////////////////////////////////////////////////////

class Propagator : public clp::BoundPropagator
{
    UTL_CLASS_DECL(Propagator, clp::BoundPropagator);

public:
    Propagator(SchedulingContext* context)
        : BoundPropagator(context->manager())
    {
        _context = context;
    }

    virtual void unsuspend(clp::ConstrainedBound* cb);

    virtual void finalize(clp::ConstrainedBound* cb);

private:
    void
    init()
    {
        ABORT();
    }
    void
    deInit()
    {
    }

private:
    SchedulingContext* _context;
};

////////////////////////////////////////////////////////////////////////////////////////////////////

CSE_NS_END;
