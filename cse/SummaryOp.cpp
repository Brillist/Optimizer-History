#include "libcse.h"
#include <libutl/BufferedFDstream.h>
#include "SummaryOp.h"
#include "Job.h"

////////////////////////////////////////////////////////////////////////////////////////////////////

UTL_NS_USE;
LUT_NS_USE;
CLS_NS_USE;

////////////////////////////////////////////////////////////////////////////////////////////////////

UTL_CLASS_IMPL(cse::SummaryOp);

////////////////////////////////////////////////////////////////////////////////////////////////////

CSE_NS_BEGIN;

////////////////////////////////////////////////////////////////////////////////////////////////////

void
SummaryOp::copy(const Object& rhs)
{
    auto& so = utl::cast<SummaryOp>(rhs);
    super::copy(so);
    _childOps.clear();
}

////////////////////////////////////////////////////////////////////////////////////////////////////

String
SummaryOp::toString() const
{
    MemStream str;
    str << "summaryOp:" << id() << ", job:" << job()->id() << ", childOps:";
    bool first = true;
    for (auto childOp : _childOps)
    {
        if (!first)
        {
            str << ", ";
        }
        str << childOp->id();
        first = false;
    }
    return String(str.takeString(), true, false);
}

////////////////////////////////////////////////////////////////////////////////////////////////////

CSE_NS_END;
