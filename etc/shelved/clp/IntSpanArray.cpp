#include <clp/libclp.h>
#include <clp/IntSpanArray.h>

////////////////////////////////////////////////////////////////////////////////////////////////////

UTL_NS_USE;
LUT_NS_USE;

////////////////////////////////////////////////////////////////////////////////////////////////////

UTL_CLASS_IMPL(clp::IntSpanArray);

////////////////////////////////////////////////////////////////////////////////////////////////////

CLP_NS_BEGIN;

////////////////////////////////////////////////////////////////////////////////////////////////////

void
IntSpanArray::add(int min, int max)
{
    if (_size == _reservedSize)
    {
        grow();
    }

    ASSERTD(min <= max);
    uint_t* ptr = _array + (_size * 2);
    *ptr = min;
    *++ptr = max;
    ++_size;
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void
IntSpanArray::deInit()
{
    delete[] _array;
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void
IntSpanArray::grow()
{
    ASSERTD(_size == _reservedSize);
    size_t reservedSize = _reservedSize * 2;
    utl::arrayGrow(_array, reservedSize, utl::max((size_t)4096, reservedSize + 2));
    _reservedSize = reservedSize / 2;
}

////////////////////////////////////////////////////////////////////////////////////////////////////

CLP_NS_END;
