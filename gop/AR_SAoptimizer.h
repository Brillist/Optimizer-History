#pragma once

////////////////////////////////////////////////////////////////////////////////////////////////////

#include <gop/SAoptimizer.h>

////////////////////////////////////////////////////////////////////////////////////////////////////

GOP_NS_BEGIN;

////////////////////////////////////////////////////////////////////////////////////////////////////

/** 
    Automatic Re-annealing Simulated Annealing.
    
    This is a specialization of SAoptimizer.

    \ingroup gop
*/

////////////////////////////////////////////////////////////////////////////////////////////////////

class AR_SAoptimizer : public SAoptimizer
{
    UTL_CLASS_DECL(AR_SAoptimizer, SAoptimizer);

public:
    virtual void initialize(const OptimizerConfiguration* config);

    virtual bool run();

protected:
    /** Generate a description of init temperature parameters. */
    utl::String AR_SAinitTempString();

protected:
    double _acceptanceRatio;
    double _ratioDcrRate;

    uint_t _idleIterGap;
    double _gapIncRate;

private:
    void init();
    void
    deInit()
    {
    }
};

////////////////////////////////////////////////////////////////////////////////////////////////////

GOP_NS_END;
