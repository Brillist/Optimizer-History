#pragma once

////////////////////////////////////////////////////////////////////////////////////////////////////

#include <gop/Optimizer.h>
#include <gop/StringInd.h>
#include <gop/StringScore.h>

////////////////////////////////////////////////////////////////////////////////////////////////////

GOP_NS_BEGIN;

////////////////////////////////////////////////////////////////////////////////////////////////////

/**
   Random walk optimizer.

   Unlike HillClimber, RandomWalk continues to move in single steps without ever backing up.

   \ingroup gop
*/

////////////////////////////////////////////////////////////////////////////////////////////////////

class RandomWalk : public Optimizer
{
    UTL_CLASS_DECL(RandomWalk, Optimizer);

public:
    virtual void initialize(const OptimizerConfiguration* config);

    virtual bool run();

    virtual void audit();

private:
    void init();
    void deInit();

    void
    setBestStrScore(StringScore* strScore)
    {
        delete _bestStrScore;
        _bestStrScore = strScore;
    }

private:
    StringScore* _bestStrScore;
};

////////////////////////////////////////////////////////////////////////////////////////////////////

GOP_NS_END;
