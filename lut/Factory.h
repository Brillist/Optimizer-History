#ifndef LUT_FACTORY_H
#define LUT_FACTORY_H

////////////////////////////////////////////////////////////////////////////////////////////////////

LUT_NS_BEGIN;

////////////////////////////////////////////////////////////////////////////////////////////////////

/**
   Object factory.

   \author Adam McKee
*/

////////////////////////////////////////////////////////////////////////////////////////////////////

template <class T> class Factory : public utl::Object
{
    UTL_CLASS_DECL_TPL(Factory, T);
    UTL_CLASS_NO_COPY;
    UTL_CLASS_DEFID;

public:
    /** Make a new object. */
    virtual T*
    make(void* param = nullptr, void* param1 = nullptr) const
    {
        ABORT();
        return nullptr;
    }
};

////////////////////////////////////////////////////////////////////////////////////////////////////

LUT_NS_END;

////////////////////////////////////////////////////////////////////////////////////////////////////

UTL_CLASS_IMPL_TPL(lut::Factory, T, utl::Object);

////////////////////////////////////////////////////////////////////////////////////////////////////

#endif
