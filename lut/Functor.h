#pragma once

////////////////////////////////////////////////////////////////////////////////////////////////////

LUT_NS_BEGIN;

////////////////////////////////////////////////////////////////////////////////////////////////////

/**
   Abstract base for a "functor" (object that acts like a function).

   \ingroup lut
*/

////////////////////////////////////////////////////////////////////////////////////////////////////

class Functor : public utl::Object
{
    UTL_CLASS_DECL_ABC(Functor, utl::Object);
    UTL_CLASS_NO_COPY;
    UTL_CLASS_DEFID;

public:
    /**
       Execute (with an optional argument).
       \param arg (optional) argument
    */
    virtual void execute(void* arg = nullptr) = 0;

    /**
       Act like a function.
       \param arg (optional) argument
    */
    void
    operator()(void* arg = nullptr)
    {
        execute(arg);
    }
};

////////////////////////////////////////////////////////////////////////////////////////////////////

LUT_NS_END;
